<script src="https://unpkg.com/popper.js@1"></script>
<script src="https://unpkg.com/tippy.js@4"></script>
<script>
    function navToggle() {
        let btn = document.getElementById('menuBtn');
        let nav = document.getElementById('menu');

        btn.classList.toggle('open');
        nav.classList.toggle('flex');
        nav.classList.toggle('hidden');
    }

    window.addEventListener('scroll', function () {
        let btt = document.getElementById('btt');

        if (window.scrollY >= 1080) {
            btt.classList.remove('hidden');
            btt.classList.add('block');
        } else {
            btt.classList.add('hidden');
            btt.classList.remove('block');
        }
    });

    console.log('Code/Design: ttntm.me'); // credit where credit is due

    const template = document.getElementById('followTip');
    const container = document.createElement('div');

    container.appendChild(document.importNode(template.content, true));

    tippy('#follow', {
        content: container.innerHTML,
        animation: 'scale',
        duration: 250,
        arrow: true,
        placement: 'bottom',
        interactive: true,
    });
</script>

<script>
    // Method one to scroll horozontally with vertical scroll using ScrollMagic. 
    //  Currently works on desktop but breaks on mobile

    // var controller = new ScrollMagic.Controller();
    // var scrollHorizontal = new TimelineLite()
    // scrollHorizontal.to("#scrollContainer", 1, {
    //     x: '-100%'
    // })
    
    // var horizontalScroll = new ScrollMagic.Scene({
    //     triggerElement: "#scrollContainer",
    //     triggerHook: 'onLeave',
    //     duration: 3000
    // }).setPin("#scrollContainer").setTween(scrollHorizontal).addTo(controller);
</script>


<script>
    // // Method 2 to scroll horozontally with mouse wheel

    // const target = document.querySelector('#scrollContainer')

    // target.addEventListener('wheel', event => {
    //     const toLeft = event.deltaY < 0 && target.scrollLeft > 0
    //     const toRight = event.deltaY > 0 && target.scrollLeft < target.scrollWidth - target.clientWidth

    //     if (toLeft || toRight) {
    //         event.preventDefault()
    //         target.scrollLeft += event.deltaY
    //     }
    // })
</script>

<script>
//          Method 3 to scroll horozontally with mouse wheel

//         jQuery(function ($) {
//         $.fn.hScroll = function (amount) {
//             amount = amount || 120;
//             $(this).bind("DOMMouseScroll mousewheel", function (event) {
//                 var oEvent = event.originalEvent,
//                     direction = oEvent.detail ? oEvent.detail * -amount : oEvent.wheelDelta,
//                     position = $(this).scrollLeft();
//                 position += direction > 0 ? -amount : amount;
//                 $(this).scrollLeft(position);
//                 event.preventDefault();
//             })
//         };
//     });
//     $(document).ready(function(){
//     $('#scrollContainer').hScroll(100); // You can pass (optionally) scrolling amount
// });
</script>

<script>
    // Makes the Prev and Next Buttons work on landing page

    const buttonRight = document.getElementById('slideRight');
    const buttonLeft = document.getElementById('slideLeft');

    buttonRight.onclick = function () {
        document.getElementById('scrollContainer').scrollLeft += 500;
    };
    buttonLeft.onclick = function () {
        document.getElementById('scrollContainer').scrollLeft -= 500;
    };
</script>

<script src="https://identity.netlify.com/v1/netlify-identity-widget.js"></script>


<script>
    // Automatic Scrollling horizontally
//     const flavoursContainer = document.getElementById('scrollContainer');
//     const flavoursScrollWidth = flavoursContainer.scrollWidth;

// window.addEventListener('load', () => {
//   self.setInterval(() => {
//     if (flavoursContainer.scrollLeft !== flavoursScrollWidth) {
//       flavoursContainer.scrollTo(flavoursContainer.scrollLeft + 10, 0);
//     }
//   }, 15);
// });
</script>
